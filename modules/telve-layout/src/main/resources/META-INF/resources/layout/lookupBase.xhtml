<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:p="http://primefaces.org/ui"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:t="http://java.sun.com/jsf/composite/telveComponents"
                xmlns:fn="http://java.sun.com/jsp/jstl/functions"
                template="/layout/dialogBase.xhtml">
    <ui:define name="form" >
        <h:form id="lookupForm">

            <div class="row">
                <ui:fragment rendered="#{not hideStandartFilter}">
                    <t:inputAny label="general.label.SearchKey" columnClass="col-xs-12">
                        <h:panelGroup styleClass="input-group" layout="block">
                            <p:inputText value="#{bean.model.searchText}" />
                            <p:defaultCommand target="search2" />
                            <div class="input-group-btn">
                            <p:commandButton id="search2" icon="fa fa-search" action="#{bean.search()}" update=":lookupForm:resultLists" styleClass="ui-icon-only btn btn-default" />
                            </div>
                        </h:panelGroup>
                    </t:inputAny>
                </ui:fragment>
                <div class="col-xs-12" style="padding-top: 4px;">
                    <ui:insert name="filters" />
                    <h:panelGroup id="selectionResult" layout="block" styleClass="pull-right" rendered="#{ bean.model.modelType eq 'Table' and bean.model.getMultiSelect()}">
                        #{messages['general.label.TotalSelection']} : #{bean.model.getSelectedViewModels().size()}
                        
                        <p:commandLink action="#{bean.model.clearSelectedAllDatas()}" ajax="true" partialSubmit="true" process="@this" update="selectionResult,:lookupForm:selectedResuls">
                            <i class="fa fa-trash" />
                        </p:commandLink>
                        </h:panelGroup>
                </div>
            </div>

            <div id="selected_labels"></div>
            
            <h:panelGroup id="resultLists" layout="block" styleClass="row" style="height: 320px; overflow: auto;">
                <div class="col-xs-12">

                    <c:if test="#{ bean.model.modelType eq 'Table' and bean.model.getMultiSelect()}" >
                        <div class="row">
                        <div class="col-xs-6">
                        <p:dataTable id="multiSelectDialog" var="item" value="#{bean.model.dataModel()}"  selectionMode="multiple" 
                                     selection="#{bean.model.selectedDatas}" rows="8"  paginator="true" rowKey="#{item.id}"
                                     paginatorPosition="bottom" 
                                     paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {NextPageLink} {LastPageLink}"
                                     paginatorAlwaysVisible="false">

                            <p:ajax event="rowSelect" update=":lookupForm:selectionResult,:lookupForm:selectedResuls" process="@form"/>
                            
                            <ui:remove>
                            <p:column selectionMode="multiple" style="width:36px;" />  
                            </ui:remove>
                            

                            
                            <c:forEach items="#{bean.model.columns.entrySet()}" var="col" varStatus="loop">
                                <p:column headerText="#{messages[col.value]}" rendered="#{useCustomColumns ne 'true'}">
                                    #{item[col.key]}
                                </p:column>
                            </c:forEach>
                            
                            
                            <ui:insert name="columns" />
                            
                        </p:dataTable>
                        <script type="text/javascript">
                            function setSelections(){}
                        </script>
                        </div>
                            <h:panelGroup id="selectedResuls" layout="block" styleClass="col-xs-6">
                                <p:dataTable value="#{bean.model.getSelectedViewModels()}" var="item">
                                    <p:column headerText="#{messages['general.label.SearchSelections']}">
                                    #{item[bean.captionFieldName]}
                                    </p:column>
                                </p:dataTable>
                            </h:panelGroup>
                            
                        </div>
                    </c:if>

                    <c:if test="#{bean.model.modelType eq 'Table' and not bean.model.getMultiSelect()}" >
                        
                        <p:dataTable id="singleSelectDialog" var="item" value="#{bean.model.dataModel()}" 
                                     selectionMode="single"
                                     selection="#{bean.model.selectedData}" rows="8"  paginator="true" rowKey="#{item.id}"
                                     paginatorPosition="bottom" 
                                     paginatorAlwaysVisible="false">
                            <ui:remove>
                            <p:column selectionMode="single" style="width:36px;" />  
                            </ui:remove>

                            
                            <c:forEach items="#{bean.model.columns.entrySet()}" var="col" varStatus="loop">
                                <p:column headerText="#{messages[col.value]}" rendered="#{useCustomColumns ne 'true'}">
                                    #{item[col.key]}
                                </p:column>
                            </c:forEach>
                            
                            
                            <ui:insert name="columns" />
                        </p:dataTable>
                        
                        <script type="text/javascript">
                            function setSelections(){}
                        </script>
                    </c:if>
                    
                    <c:if test="#{bean.model.modelType eq 'Tree' }" >

                        <h:inputHidden id="selectedNodes" value="#{bean.model.selectedNodes}" />
                        
                        <div class="pull-right">
                            <a href="#" onclick="jQuery('#data').jstree('close_all');">
                                <i class="fa fa-minus-square" />
                            </a>
                            <a href="#" onclick="jQuery('#data').jstree('open_all');">
                                <i class="fa fa-plus-square" />
                            </a>
                        </div>
                        
                        
                        
                        <div id="data" ></div>
                        
                        
                        <script type="text/javascript">
                            
                            function buildTree(){
                                    // inline data 
                                    jQuery("#data")
                                         .on("check_node.jstree uncheck_node.jstree", function(e, data) {
                                            //alert(data.node.id + ' ' + data.node.text + (data.node.state.checked ? ' CHECKED': ' NOT CHECKED'));
                                            setMultiSelections(data.node.id, data.node.state.checked);
                                            setMultiSelectionsLabel(data.node.text, data.node.state.checked);
                                        })
                                        .on("changed.jstree", function (e, data) {
                                            //alert( data.instance.get_node(data.selected[0]).id );
                                            //selectNode( [ { 'name': 'nodeId', 'value' : data.instance.get_node(data.selected[0]).id }]);
                                        })    
                                        .jstree({
                                            "plugins" : [ "wholerow", "types", "conditionalselect", "sort", "#{ bean.model.getMultiSelect() ? 'checkbox' : '' }" ],
                                            "checkbox": { "three_state" : false #{ bean.model.getMultiSelect() ? ', tie_selection : false' : '' } },
                                            "sort": function(a,b){
                                                return this.get_text(a).localeCompare(this.get_text(b)) > 0 ? 1 : -1;
                                            },
                                            "conditionalselect" : function (node) {
                                                return (node.children.length &amp;&amp; #{ bean.model.leafSelect} ) ? false : true;
                                            },                                       
                                            "types" : {
                                                "default" : {
                                                    "icon" : "fa fa-folder"
                                                },
                                                #{nodeTypes}
                                            },
                                            'core' : {
                                                'data' : [
                                                    <ui:repeat value = "#{bean.model.dataModel()}" var = "node" >
                                                        { "id" : "#{node.id}", "parent" : "#{bean.model.findParent( node ) eq null ? '#' : node.parentId}", "text" : "#{fn:escapeXml(node[bean.captionFieldName])}", "type" : "#{bean.model.getNodeType(node)}" },
                                                    </ui:repeat>
                                                     
                                                ]
                                            }
                                        })
                                        .bind("loaded.jstree", function (e, data) {
                                            jQuery('#data').jstree("select_node", "#{bean.model.selectedNodes}", true); 
                                        }); 
                                        
                                    }
                                    buildTree();
                                    
                                    function setSelections(){
                                        if( #{ bean.model.getMultiSelect() ? 'false' : 'true' } ){
                                            var s = jQuery('#data').jstree().get_selected();
                                            jQuery(PrimeFaces.escapeClientId("lookupForm:selectedNodes")).val(s);
                                        }
                                    }
                                    
                                    function setMultiSelections( data, add ){
                                            var s = jQuery(PrimeFaces.escapeClientId("lookupForm:selectedNodes")).val();
                                            var a = s.split(',');
                                            if( add ){
                                                a.push(data);
                                            } else {
                                                var i = a.indexOf( data );
                                                a.splice( i, 1);
                                            }
                                            jQuery(PrimeFaces.escapeClientId("lookupForm:selectedNodes")).val(a.join());
                                            
                                            //selected_labels
                                    }
                                    
                                    function setMultiSelectionsLabel( data, add ){
                                            var s = jQuery('#selected_labels').text();
                                            var a = s.split(',');
                                            if( add ){
                                                a.push(data);
                                            } else {
                                                var i = a.indexOf( data );
                                                a.splice( i, 1);
                                            }
                                            jQuery('#selected_labels').text(a.join());
                                            
                                    }

                                    
                                </script>
                        
                    </c:if>
                    
                </div>
            </h:panelGroup>
            <h:panelGroup styleClass="row actionButtons" layout="block" style="position: fixed; bottom: 0; display: block;">
                <ui:insert name="actionButtons" />
                <p:commandButton id="select" value="#{messages['general.button.Ok']}" icon="fa fa-check" action="#{bean.closeDialog()}" onclick="setSelections()" styleClass="btn-primary"/>
                <p:commandButton id="close" value="#{messages['general.button.Cancel']}" icon="ui-icon-close" action="#{bean.cancelDialog()}" />
            </h:panelGroup>
        </h:form>
    </ui:define>
</ui:composition>
