<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:t="http://java.sun.com/jsf/composite/telveComponents"
                template="/layout/optionPaneBase.xhtml">

    <ui:param name="bean" value="#{guiOptionPane}" />
    <ui:define name="content">

        <div class="row">
            <ui:remove>
            <div class="prop col-md-6 col-xs-12">
                <p:outputLabel  value="#{messages['general.label.Theme']}" styleClass="name" />
                <span class="value">
                    <p:themeSwitcher  value="#{guiOptionPane.theme}" effect="fade" id="statefulSwitcher">
                        <f:selectItems value="#{guiOptionPane.themes}" />  
                        <p:ajax listener="#{guiOptionPane.saveTheme}" partialSubmit="true" process="@this"/> 
                    </p:themeSwitcher>
                </span>
            </div>
                </ui:remove>

            <div class="prop col-md-6 col-xs-12">
                <p:outputLabel  value="#{messages['general.label.Locale']}" styleClass="name" />
                <span class="value">
                    <p:selectOneMenu  value="#{guiOptionPane.locale}" >
                        <f:selectItems value="#{guiOptionPane.supportedLocales}" />
                        <p:ajax event="change" listener="#{guiOptionPane.saveLocale}" partialSubmit="true" process="@this"/> 
                    </p:selectOneMenu>
                </span>
            </div>
            <ui:fragment rendered="#{guiOptionPane.showSidebar}">
                <t:inputCheckboxGroup label="Sidebar">
                    <p:selectBooleanCheckbox value="#{guiOptionPane.sidebar}" itemLabel="#{messages['Mini Sidebar']}" /> 
                    <p:selectBooleanCheckbox value="#{guiOptionPane.slimScroll}" itemLabel="#{messages['Slim Scroll']}" /> 
                </t:inputCheckboxGroup>
            </ui:fragment>
            
            <t:inputAny label="general.label.Theme">
                <p:selectOneMenu value="#{guiOptionPane.skin}" >
                    <f:selectItem itemLabel="Blue" itemValue="skin-blue" />
                    <f:selectItem itemLabel="Green" itemValue="skin-green" />
                    <f:selectItem itemLabel="Red" itemValue="skin-red" />
                    <f:selectItem itemLabel="Yellow" itemValue="skin-yellow" />
                    <f:selectItem itemLabel="Black" itemValue="skin-black" />
                    <f:selectItem itemLabel="Purple" itemValue="skin-purple" />
                    
                    <f:selectItem itemLabel="Blue Light" itemValue="skin-blue-light" />
                    <f:selectItem itemLabel="Green Light" itemValue="skin-green-light" />
                    <f:selectItem itemLabel="Red Light" itemValue="skin-red-light" />
                    <f:selectItem itemLabel="Yellow Light" itemValue="skin-yellow-light" />
                    <f:selectItem itemLabel="Black Light" itemValue="skin-black-light" />
                    <f:selectItem itemLabel="Puple Light" itemValue="skin-purple-light" />
                </p:selectOneMenu>
            </t:inputAny>
        </div>
        
        <script type="text/javascript">
             /**
            * Replaces the old skin with the new skin
            * @param String cls the new skin class
            * @returns Boolean false to prevent link's default action
            */
           function change_skin(cls) {
             jQuery.each(my_skins, function (i) {
               jQuery("body").removeClass(my_skins[i]);
             });

             jQuery("body").addClass(cls);
             //store('skin', cls);
             return false;
           }
            
            //Add the change skin listener
            jQuery("[data-skin]").on('click', function (e) {
              e.preventDefault();
              change_skin(jQuery(this).data('skin'));
            });
        </script>
    </ui:define>





</ui:composition>
